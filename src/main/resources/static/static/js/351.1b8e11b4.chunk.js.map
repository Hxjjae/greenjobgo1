{"version":3,"file":"static/js/351.1b8e11b4.chunk.js","mappings":"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","sources":["api/client.js","api/studentAxios.js","components/OkModal.js","styles/NoResumeStyle.js","components/student/MyPortfolio/NoResume.js","styles/YesResumStyle.js","components/student/MyPortfolio/YesResume.js","styles/MyPofolMgStyle.js","pages/studentPages/MyPortfolioMg.js","recoil/atoms/UserInfoState.js","recoil/selectors/UserInfoSelector.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, removeCookie, setCookie } from \"./cookie\";\r\n\r\n// axios 인스턴스 생성\r\nexport const client = axios.create({\r\n  baseURL: \"/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    const token = getCookie(\"accessToken\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const { config, response } = error;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    if (response && response.status === 401 && refreshToken) {\r\n      try {\r\n        const { data } = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n\r\n        const accessToken = data;\r\n        setCookie(\"accessToken\", accessToken);\r\n\r\n        if (config && config.headers && config.headers.Authorization) {\r\n          config.headers.Authorization = `Bearer ${accessToken}`;\r\n          const retryResponse = await client(config);\r\n          return retryResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"토큰 갱신 실패:\", error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n    if (role && refreshToken && accessToken) {\r\n      const cookieOptions = {\r\n        path: \"/\",\r\n        secure: true,\r\n        sameSite: \"none\",\r\n        httpOnly: false,\r\n        maxAge: 180,\r\n      };\r\n\r\n      setCookie(\"refreshToken\", refreshToken, cookieOptions);\r\n      setCookie(\"accessToken\", accessToken, cookieOptions);\r\n      setErrorCancelInfo(\"\");\r\n\r\n      if (role === \"ROLE_USER\") {\r\n        return { role, accessToken, refreshToken, vo };\r\n      } else if (role === \"ROLE_COMPANY\") {\r\n        return {\r\n          role,\r\n          accessToken,\r\n          refreshToken,\r\n          vo,\r\n          refresh: true,\r\n          accessTokenTime,\r\n        };\r\n      }\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    if (error.response.status === 432) {\r\n      setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n    }\r\n    if (error.response.status === 434) {\r\n      setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n    }\r\n    if (error.response.status === 435) {\r\n      setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n    }\r\n    if (error.response.status === 500) {\r\n      setErrorCancelInfo(\"서버 오류 입니다.\");\r\n    }\r\n    throw new Error(\"로그인에 실패했습니다.\");\r\n  }\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async (accessToken, refreshToken) => {\r\n  try {\r\n    const res = await client.post(\"/sign/logout\");\r\n    removeCookie(accessToken);\r\n    removeCookie(refreshToken);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { client } from \"../api/client\";\r\n\r\nexport const getStudentInfo = async (setUserInfo, setErrorInfo) => {\r\n  try {\r\n    const res = await client.get(`/student`);\r\n\r\n    const { std, file } = res.data;\r\n\r\n    console.log(res.data);\r\n    console.log(res.data);\r\n\r\n    return { std, file };\r\n  } catch (error) {\r\n    setErrorInfo(`Student Info: ${error.message}`);\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const NoResumeWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 14px;\r\n  height: 270px;\r\n  border: 1px solid ${Maincolor.maingray};\r\n  border-radius: 10px;\r\n  margin-top: 40px;\r\n  padding: 50px 0;\r\n  > div {\r\n    width: 100%;\r\n    text-align: center;\r\n    :nth-of-type(1) {\r\n      width: 90px;\r\n      height: 90px;\r\n      > img {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n    :nth-of-type(2) {\r\n      font-size: 20px;\r\n      font-weight: 500;\r\n      color: #333333;\r\n    }\r\n    :nth-of-type(3) {\r\n      font-size: 16px;\r\n      font-weight: 400;\r\n      color: ${Maincolor.btn};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NoResumeWrap } from \"../../../styles/NoResumeStyle\";\r\nimport { AuthStateAtom } from \"../../../recoil/atoms/AuthState\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst NoResume = () => {\r\n  const authState = useRecoilValue(AuthStateAtom);\r\n\r\n  return (\r\n    <NoResumeWrap>\r\n      <div>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/assets/no_resume.png`}\r\n          alt=\"자료없음\"\r\n        />\r\n      </div>\r\n      <div>\r\n        {authState.aboutMeYn === 0 && authState.portfolioYn === 1 && (\r\n          <span>아직 이력서를 등록하지 않으셨네요.</span>\r\n        )}\r\n        {authState.portfolioYn === 0 && authState.aboutMeYn === 1 && (\r\n          <span>아직 포트폴리오를 등록하지 않으셨네요.</span>\r\n        )}\r\n        {authState.aboutMeYn === 0 && authState.portfolioYn === 0 && (\r\n          <span>아직 이력서와 포트폴리오를 등록하지 않으셨네요.</span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <span>\r\n          수강하신 과정의 이력서와 포트폴리오를 등록하시면 채용을 희망하는\r\n          기업에 공개되어 취업 가능성이 높아져요.\r\n        </span>\r\n      </div>\r\n    </NoResumeWrap>\r\n  );\r\n};\r\n\r\nexport default NoResume;\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const YesResumeWrap = styled.div`\r\n  .contain {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 270px;\r\n    border: 1px solid ${Maincolor.maingray};\r\n    border-radius: 10px;\r\n    padding: 30px 40px;\r\n    > div {\r\n      width: 100%;\r\n      :nth-of-type(1) {\r\n        width: 295px;\r\n        height: 210px;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n      }\r\n      :nth-of-type(2) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        .content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          /* justify-content: center; */\r\n          /* justify-content: space-between; */\r\n          width: 100%;\r\n          height: 100%;\r\n          padding: 15px 0 0 60px;\r\n          > div {\r\n            width: 100%;\r\n            :nth-of-type(1) {\r\n              margin-bottom: 52px;\r\n              > h3 {\r\n                font-size: 20px;\r\n                font-weight: 500;\r\n                color: ${Maincolor.black};\r\n                margin-bottom: 14px;\r\n              }\r\n              > span {\r\n                font-size: 16px;\r\n                font-weight: 500;\r\n                color: ${Maincolor.black};\r\n              }\r\n            }\r\n            :nth-of-type(2) {\r\n              padding-bottom: 16px;\r\n              > span {\r\n                margin-right: 34px;\r\n              }\r\n            }\r\n            :nth-of-type(3) {\r\n              > span {\r\n                margin-right: 21px;\r\n              }\r\n            }\r\n            :not(:first-of-type) {\r\n              > span {\r\n                :first-of-type {\r\n                  font-size: 16px;\r\n                  font-weight: 500;\r\n                  color: ${Maincolor.black};\r\n                }\r\n                :last-of-type {\r\n                  font-size: 14px;\r\n                  font-weight: 400;\r\n                  color: ${Maincolor.btn};\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .move-button {\r\n          > button {\r\n            width: 220px;\r\n            height: 50px;\r\n            border: none;\r\n            border-radius: 6px;\r\n            color: ${Maincolor.white};\r\n            background: ${Maincolor.admintxt};\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    gap: 20px;\r\n    padding-top: 40px;\r\n    > button {\r\n      width: 150px;\r\n      height: 50px;\r\n      color: ${Maincolor.white};\r\n      border: none;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      :first-of-type {\r\n        background: ${Maincolor.input};\r\n      }\r\n      :last-of-type {\r\n        background: ${Maincolor.grayDeep};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { YesResumeWrap } from \"../../../styles/YesResumStyle\";\r\nimport NoImage from \"../../../assets/NoImage.jpg\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useRecoilState, useRecoilValue, useRecoilValueLoadable } from \"recoil\";\r\nimport { AuthStateAtom } from \"../../../recoil/atoms/AuthState\";\r\nimport { userInfo } from \"../../../recoil/selectors/UserInfoSelector\";\r\nimport { userInfoAtom } from \"../../../recoil/atoms/UserInfoState\";\r\n\r\nconst YesResume = () => {\r\n  const authState = useRecoilValue(AuthStateAtom);\r\n  const userInfo = useRecoilValue(userInfoAtom);\r\n\r\n  const navigate = useNavigate();\r\n  // 이미지 없을 때 error처리\r\n  const onImgError = e => {\r\n    e.target.src = NoImage;\r\n  };\r\n  const handleMovePage = () => {\r\n    navigate(\"/student/mypage\");\r\n  };\r\n  return (\r\n    <YesResumeWrap>\r\n      <div className=\"contain\">\r\n        <div>\r\n          <img\r\n            src={`/img/student/${userInfo.std?.istudent}/${userInfo.file?.img?.img}`}\r\n            alt=\"자료없음\"\r\n            onError={onImgError}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"content\">\r\n            <div>\r\n              <h3>{userInfo.std?.introducedLine}</h3>\r\n              <span>{userInfo.std?.name}</span>\r\n            </div>\r\n            <div>\r\n              <span>과정명</span>\r\n              <span>{userInfo.std?.subject?.subjectName}</span>\r\n            </div>\r\n            <div>\r\n              <span>수강기간</span>\r\n              <span>\r\n                {userInfo.std?.startedAt} ~ {userInfo.std?.endedAt}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"move-button\">\r\n            <button onClick={handleMovePage}>포트폴리오 상세보기</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </YesResumeWrap>\r\n  );\r\n};\r\n\r\nexport default YesResume;\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const MyPortfolioWrap = styled.div`\r\n  width: 1400px;\r\n  height: 100%;\r\n  .btm-buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n    padding-top: 40px;\r\n    > button {\r\n      width: 150px;\r\n      height: 50px;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      color: ${Maincolor.white};\r\n      border: none;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      background: ${Maincolor.btn};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MyPortfolioTitle = styled.li`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #000000;\r\n  padding: 20px 0 40px 0;\r\n`;\r\nexport const MyPortfolioButton = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  border-radius: 10px;\r\n  background: ${Maincolor.search};\r\n  padding: 0 30px 0 40px;\r\n  div {\r\n    > span {\r\n      :nth-of-type(2) {\r\n        font-size: 18px;\r\n      }\r\n      :not(:nth-of-type(2)) {\r\n        font-weight: 400;\r\n      }\r\n    }\r\n    > button {\r\n      width: 180px;\r\n      height: 50px;\r\n      border: none;\r\n      border-radius: 6px;\r\n      color: ${Maincolor.white};\r\n      background: ${Maincolor.btn};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\nexport const MyPortfolioContent = styled.li`\r\n  margin-top: 40px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NoResume from \"../../components/student/MyPortfolio/NoResume\";\r\nimport YesResume from \"../../components/student/MyPortfolio/YesResume\";\r\nimport {\r\n  MyPortfolioButton,\r\n  MyPortfolioContent,\r\n  MyPortfolioTitle,\r\n  MyPortfolioWrap,\r\n} from \"../../styles/MyPofolMgStyle\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { AuthStateAtom } from \"../../recoil/atoms/AuthState\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { getStudentInfo } from \"../../api/studentAxios\";\r\nimport { userInfoAtom } from \"../../recoil/atoms/UserInfoState\";\r\nimport OkModal from \"../../components/OkModal\";\r\nconst MyPortfolioMg = () => {\r\n  // 오류 메세지 받아오는 state.\r\n  const [errorModalOpen, setErrorModalOpen] = useState(false);\r\n  const [errorInfo, setErrorInfo] = useState(\"\");\r\n\r\n  const authState = useRecoilValue(AuthStateAtom);\r\n  const [userInfo, setUserInfo] = useRecoilState(userInfoAtom);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { std, file } = await getStudentInfo(setErrorInfo);\r\n      setUserInfo({ std, file });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleResumeMove = () => {\r\n    navigate(\"/student/addresume\");\r\n  };\r\n\r\n  const handlePortfolioMove = () => {\r\n    navigate(\"/student/addportfolio\");\r\n  };\r\n  console.log(\"get:\", userInfo.std);\r\n  console.log(\"get:\", userInfo.file);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (errorInfo) {\r\n      setErrorModalOpen(true);\r\n    } else {\r\n      setErrorModalOpen(false);\r\n    }\r\n  }, [errorInfo]);\r\n  return (\r\n    <MyPortfolioWrap>\r\n      <ul>\r\n        <MyPortfolioTitle>\r\n          <h2>나의 포트폴리오 관리</h2>\r\n        </MyPortfolioTitle>\r\n        <MyPortfolioButton>\r\n          <div>\r\n            <span>수강하신&ensp;</span>\r\n            <span>{userInfo.std?.subject?.subjectName}</span>\r\n            <span>\r\n              의&ensp;포트폴리오를 등록하고 취업의 기회를 넓혀 보세요!\r\n            </span>\r\n          </div>\r\n          <div>\r\n            {authState.editableYn === 1 && authState.aboutMeYn === 0 ? (\r\n              <button onClick={handleResumeMove}>이력서 등록</button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {authState.editableYn === 1 &&\r\n            authState.aboutMeYn === 1 &&\r\n            authState.portfolioYn === 0 ? (\r\n              <button onClick={handlePortfolioMove}>포트폴리오 등록</button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </MyPortfolioButton>\r\n        <MyPortfolioContent>\r\n          {authState?.portfolioYn === 1 && authState?.aboutMeYn === 1 ? (\r\n            <YesResume />\r\n          ) : (\r\n            <NoResume />\r\n          )}\r\n        </MyPortfolioContent>\r\n        <div className=\"btm-buttons\">\r\n          {authState.editableYn === 1 &&\r\n          authState.portfolioYn === 1 &&\r\n          authState.aboutMeYn === 1 ? (\r\n            <>\r\n              <button onClick={handleResumeMove}>이력서 수정</button>\r\n              <button onClick={handlePortfolioMove}>포트폴리오 수정</button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </ul>\r\n      {/* api 에러 확인모달 */}\r\n      {errorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={errorModalOpen}\r\n          close={() => {\r\n            setErrorModalOpen(false);\r\n            setErrorInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setErrorModalOpen(false);\r\n            setErrorInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </MyPortfolioWrap>\r\n  );\r\n};\r\n\r\nexport default MyPortfolioMg;\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\n\r\nconst { persistAtom } = recoilPersist();\r\n\r\nexport const userInfoAtom = atom({\r\n  key: \"userInfoAtom\",\r\n  default: {\r\n    std: {\r\n      istudent: 0,\r\n      age: 0,\r\n      gender: \"\",\r\n      name: \"\",\r\n      birthday: \"\",\r\n      address: \"\",\r\n      email: \"\",\r\n      startedAt: \"\",\r\n      endedAt: \"\",\r\n      mobileNumber: \"\",\r\n      education: \"\",\r\n      introducedLine: \"\",\r\n      huntJobYn: 0,\r\n      subject: {\r\n        icourseSubject: 0,\r\n        subjectName: \"\",\r\n      },\r\n      certificates: [\r\n        {\r\n          icertificate: 0,\r\n          certificate: \"\",\r\n        },\r\n      ],\r\n    },\r\n    file: {\r\n      img: {\r\n        ifile: 0,\r\n        img: \"\",\r\n      },\r\n      resume: {\r\n        ifile: 0,\r\n        resume: \"\",\r\n        oneWord: \"\",\r\n      },\r\n      portfolio: [\r\n        {\r\n          ifile: 0,\r\n          file: \"\",\r\n          oneWord: \"\",\r\n          mainYn: 0,\r\n        },\r\n      ],\r\n      fileLinks: [\r\n        {\r\n          ifile: 0,\r\n          fileLink: \"\",\r\n          oneWord: \"\",\r\n        },\r\n      ],\r\n    },\r\n    portfolioYn: 0,\r\n    aboutMeYn: 0,\r\n  },\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n","import { selector } from \"recoil\";\r\nimport { client } from \"../../api/client\";\r\nimport { userInfoAtom } from \"../atoms/UserInfoState\";\r\n\r\nexport const userInfo = selector({\r\n  key: \"userInfo\",\r\n  get: async () => {\r\n    try {\r\n      const res = await client(`/student`);\r\n\r\n      const { std, file } = res.data;\r\n\r\n      return { std, file };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  set: ({ set }) => {\r\n    set(userInfoAtom);\r\n  },\r\n});\r\n"],"names":["client","axios","create","baseURL","headers","interceptors","request","use","async","token","getCookie","config","Authorization","concat","error","console","log","Promise","reject","response","refreshToken","status","data","post","accessToken","setCookie","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","cookieOptions","path","secure","sameSite","httpOnly","maxAge","refresh","postLogout","removeCookie","getStudentInfo","setUserInfo","setErrorInfo","get","std","file","message","_ref","header","open","close","onConfirm","children","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","NoResumeWrap","styled","div","_templateObject","_taggedTemplateLiteral","Maincolor","maingray","btn","NoResume","authState","useRecoilValue","AuthStateAtom","aboutMeYn","portfolioYn","YesResumeWrap","black","white","admintxt","input","grayDeep","YesResume","_userInfo$std","_userInfo$file","_userInfo$file$img","_userInfo$std2","_userInfo$std3","_userInfo$std4","_userInfo$std4$subjec","_userInfo$std5","_userInfo$std6","userInfo","userInfoAtom","navigate","useNavigate","istudent","img","onError","target","NoImage","introducedLine","name","subject","subjectName","startedAt","endedAt","handleMovePage","MyPortfolioWrap","MyPortfolioTitle","li","_templateObject2","MyPortfolioButton","_templateObject3","search","MyPortfolioContent","_templateObject4","MyPortfolioMg","_userInfo$std$subject","errorModalOpen","setErrorModalOpen","useState","errorInfo","useRecoilState","handleResumeMove","handlePortfolioMove","useEffect","fetchData","editableYn","_Fragment","OkModal","persistAtom","recoilPersist","atom","key","default","age","gender","birthday","address","mobileNumber","education","huntJobYn","icourseSubject","certificates","icertificate","certificate","ifile","resume","oneWord","portfolio","mainYn","fileLinks","fileLink","effects_UNSTABLE","selector","set"],"sourceRoot":""}