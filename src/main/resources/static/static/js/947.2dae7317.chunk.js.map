{"version":3,"file":"static/js/947.2dae7317.chunk.js","mappings":"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","sources":["api/client.js","components/OkModal.js","styles/LoginStyle.js","pages/Login.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  getCookie,\r\n  removeCookie,\r\n  setAcessCookie,\r\n  setRefreshCookie,\r\n} from \"./cookie\";\r\n\r\n// axios 인스턴스 생성\r\nexport const client = axios.create({\r\n  baseURL: \"/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    const token = getCookie(\"accessToken\");\r\n    if (token) {\r\n      console.log(\"액세스토큰\", token);\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const { config, response } = error;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    console.log(refreshToken);\r\n    if (response.status === 401 && refreshToken) {\r\n      try {\r\n        const { data } = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n        console.log(data);\r\n\r\n        const accessToken = data;\r\n        console.log(accessToken);\r\n        setAcessCookie(\"accessToken\", accessToken);\r\n        console.log(accessToken);\r\n\r\n        console.log(refreshToken);\r\n        if (config.headers && config.headers.Authorization) {\r\n          config.headers.Authorization = `Bearer ${accessToken}`;\r\n          const retryResponse = await client(config);\r\n          return retryResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"토큰 갱신 실패:\", error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n\r\n    console.log(res.data);\r\n    if (role && refreshToken && accessToken) {\r\n      setRefreshCookie(\"refreshToken\", refreshToken);\r\n\r\n      setAcessCookie(\"accessToken\", accessToken);\r\n\r\n      setErrorCancelInfo(\"\");\r\n\r\n      if (role === \"ROLE_USER\") {\r\n        console.log(\"수강생액세스\", accessToken);\r\n        console.log(\"수강생리프레시\", refreshToken);\r\n        return { role, accessToken, refreshToken, vo };\r\n      } else if (role === \"ROLE_COMPANY\") {\r\n        console.log(\"기업액세스\", accessToken);\r\n        console.log(\"기업리프레시\", refreshToken);\r\n        return {\r\n          role,\r\n          accessToken,\r\n          refreshToken,\r\n          vo,\r\n          accessTokenTime,\r\n        };\r\n      }\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    if (error.response.status === 432) {\r\n      setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n    }\r\n    if (error.response.status === 434) {\r\n      setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n    }\r\n    if (error.response.status === 435) {\r\n      setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n    }\r\n    if (error.response.status === 500) {\r\n      setErrorCancelInfo(\"서버 오류 입니다.\");\r\n    }\r\n    throw new Error(\"로그인에 실패했습니다.\");\r\n  }\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async (accessToken, refreshToken) => {\r\n  try {\r\n    const res = await client.post(\"/sign/logout\");\r\n    removeCookie(accessToken);\r\n    removeCookie(refreshToken);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginWrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  @media all and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 100vh;\r\n  }\r\n`;\r\n\r\nexport const LoginInner = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  li {\r\n    :first-of-type {\r\n      width: 50%;\r\n      height: 100vh;\r\n      img {\r\n        width: 100%;\r\n        height: 100vh;\r\n      }\r\n    }\r\n    :last-of-type {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      gap: 30px;\r\n      margin-right: 12.5%;\r\n      .login-title {\r\n        padding-left: 65px;\r\n      }\r\n      form {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        gap: 25px;\r\n        div {\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          gap: 20px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          input {\r\n            width: 440px;\r\n            height: 40px;\r\n            border: 1px solid #aaa;\r\n            border-radius: 4px;\r\n            padding: 0 5px;\r\n          }\r\n          button {\r\n            width: 440px;\r\n            height: 50px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            color: #fff;\r\n            background: #228fcf;\r\n            border: none;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media all and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    li {\r\n      :first-of-type {\r\n        display: none;\r\n        img {\r\n          display: none;\r\n        }\r\n      }\r\n      :last-of-type {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        gap: 40px;\r\n        margin-right: 0;\r\n        .login-title {\r\n          padding-left: 0;\r\n          img {\r\n            width: 235px;\r\n            height: 20px;\r\n          }\r\n        }\r\n        form {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          flex-direction: column;\r\n          gap: 25px;\r\n          div {\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            align-items: center;\r\n            gap: 20px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            label {\r\n              display: none;\r\n            }\r\n            input {\r\n              width: 250px;\r\n              height: 35px;\r\n              border: 1px solid #aaa;\r\n              border-radius: 4px;\r\n              padding: 0 5px;\r\n            }\r\n            button {\r\n              width: 250px;\r\n              height: 40px;\r\n              font-size: 14px;\r\n              font-weight: 600;\r\n              color: #fff;\r\n              background: #228fcf;\r\n              border: none;\r\n              border-radius: 6px;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { fetchLogin, postLogout } from \"../api/client\";\r\nimport { LoginInner, LoginWrap } from \"../styles/LoginStyle\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { AuthStateAtom } from \"../recoil/atoms/AuthState\";\r\nimport OkModal from \"../components/OkModal\";\r\nimport { getCookie, setAcessCookie, setRefreshCookie } from \"../api/cookie\";\r\n\r\nconst Login = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [authState, setAuthState] = useRecoilState(AuthStateAtom);\r\n\r\n  // 로그인 오류 메세지 받아오는 state.\r\n  const [errorModalOpen, setErrorModalOpen] = useState(false);\r\n  const [errorCancelInfo, setErrorCancelInfo] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginId = e => {\r\n    setUserId(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  const handleLoginPass = e => {\r\n    setPassword(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      setErrorCancelInfo(\"아이디를 입력해 주세요.\");\r\n      return;\r\n    } else if (!password) {\r\n      setErrorCancelInfo(\"비밀번호를 입력해 주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        const { role, accessToken, refreshToken, vo, accessTokenTime } =\r\n          await fetchLogin(userId, password, setErrorCancelInfo);\r\n        if (role === \"ROLE_USER\" && accessToken) {\r\n          console.log(role);\r\n          setAuthState({\r\n            isLogin: true,\r\n            accessToken: accessToken,\r\n            role: role,\r\n            editableYn: vo?.editableYn,\r\n            portfolioYn: vo?.portfolioYn,\r\n            aboutMeYn: vo?.aboutMeYn,\r\n          });\r\n          navigate(\"/student\");\r\n        } else if (role === \"ROLE_COMPANY\" && accessToken) {\r\n          setAuthState({\r\n            isLogin: true,\r\n            accessToken: accessToken,\r\n            role: role,\r\n          });\r\n          navigate(\"/business\");\r\n\r\n          setTimeout(() => {\r\n            if (role === \"ROLE_COMPANY\") {\r\n              postLogout(accessToken, refreshToken);\r\n              setAuthState({\r\n                isLogin: false,\r\n                accessToken: null,\r\n                role: \"\",\r\n              });\r\n              navigate(\"/\");\r\n            }\r\n          }, accessTokenTime);\r\n          console.log(accessTokenTime);\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\"errorrrrrrrr\", error);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (errorCancelInfo) {\r\n      setErrorModalOpen(true);\r\n    } else {\r\n      setErrorModalOpen(false);\r\n    }\r\n  }, [errorCancelInfo]);\r\n\r\n  return (\r\n    <LoginWrap>\r\n      <LoginInner>\r\n        <li>\r\n          <img src=\"../../assets/Login.png\" alt=\"LoginImage\" />\r\n        </li>\r\n        <li>\r\n          <div className=\"login-title\">\r\n            <img src=\"../../assets/LoginTitle.png\" alt=\"LoginTitle\" />\r\n          </div>\r\n          <form>\r\n            <div>\r\n              <label htmlFor=\"login-id\">아이디</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"login-id\"\r\n                placeholder=\"아이디를 입력해주세요.\"\r\n                value={userId}\r\n                onChange={e => handleLoginId(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"login-password\">비밀번호</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"login-password\"\r\n                placeholder=\"비밀번호를 입력해주세요.\"\r\n                value={password}\r\n                onChange={e => handleLoginPass(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button onClick={handleSubmit}>로그인</button>\r\n            </div>\r\n          </form>\r\n        </li>\r\n      </LoginInner>\r\n      {/* api 에러 확인모달 */}\r\n      {errorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={errorModalOpen}\r\n          close={() => {\r\n            setErrorModalOpen(false), setErrorCancelInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setErrorModalOpen(false), setErrorCancelInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorCancelInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </LoginWrap>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["client","axios","create","baseURL","headers","interceptors","request","use","async","token","getCookie","console","log","config","Authorization","concat","error","Promise","reject","response","refreshToken","status","data","post","accessToken","setAcessCookie","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","setRefreshCookie","postLogout","removeCookie","_ref","header","open","close","onConfirm","children","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","LoginWrap","styled","div","_templateObject","_taggedTemplateLiteral","LoginInner","ul","_templateObject2","Login","setUserId","useState","setPassword","authState","setAuthState","useRecoilState","AuthStateAtom","errorModalOpen","setErrorModalOpen","errorCancelInfo","navigate","useNavigate","useEffect","htmlFor","type","id","placeholder","value","onChange","target","handleLoginId","handleLoginPass","preventDefault","isLogin","editableYn","portfolioYn","aboutMeYn","setTimeout","OkModal"],"sourceRoot":""}