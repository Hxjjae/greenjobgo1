{"version":3,"file":"static/js/381.6f6fc1f0.chunk.js","mappings":"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","sources":["api/client.js","components/OkModal.js","styles/ConnectCompanyStyle.js","styles/PagingStyle.js","components/student/CompanyListPaging.js","pages/studentPages/ConnectCompany.js","api/companyListAxios.js","styles/ListPagingStyle.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, removeCookie, setCookie } from \"./cookie\";\r\n\r\nconst client = axios.create({\r\n  baseURL: \"/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst setAuthHeader = () => {\r\n  const accessToken = getCookie(\"accessToken\");\r\n  if (accessToken) {\r\n    client.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\r\n  } else {\r\n    delete client.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    setAuthHeader();\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const originalRequest = error.config;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    if (error.response.status === 401 && refreshToken) {\r\n      try {\r\n        const response = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n        const accessToken = response.data;\r\n        setCookie(\"accessToken\", accessToken);\r\n        setAuthHeader();\r\n        return client(originalRequest);\r\n      } catch (error) {\r\n        console.error(\"토큰 갱신 실패:\", error);\r\n        removeAuth();\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n    if (role && refreshToken && accessToken) {\r\n      setCookie(\"refreshToken\", refreshToken);\r\n      setCookie(\"accessToken\", accessToken);\r\n      setAuthHeader();\r\n      setErrorCancelInfo(\"\");\r\n      return { role, accessToken, refreshToken, vo, accessTokenTime };\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    handleLoginError(error, setErrorCancelInfo);\r\n  }\r\n};\r\n\r\n// 토큰삭제 함수\r\nconst removeAuth = () => {\r\n  removeCookie(\"accessToken\");\r\n  removeCookie(\"refreshToken\");\r\n  delete client.defaults.headers.common[\"Authorization\"];\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async () => {\r\n  try {\r\n    await client.post(\"/sign/logout\");\r\n    removeAuth();\r\n  } catch (error) {\r\n    console.error(\"로그아웃 실패:\", error);\r\n  }\r\n};\r\n\r\n// 예외처리 함수\r\nconst handleLoginError = (error, setErrorCancelInfo) => {\r\n  if (error.response.status === 432) {\r\n    setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n  } else if (error.response.status === 434) {\r\n    setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n  } else if (error.response.status === 435) {\r\n    setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n  } else if (error.response.status === 500) {\r\n    setErrorCancelInfo(\"서버 오류 입니다.\");\r\n  }\r\n  throw new Error(\"로그인에 실패했습니다.\");\r\n};\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ConnectCompanyWrap = styled.div`\r\n  width: 1400px;\r\n  padding-top: 30px;\r\n  h2 {\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 40px;\r\n  }\r\n  .connect-company-inner {\r\n    ul {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      gap: 40px;\r\n      li {\r\n        width: 320px;\r\n        height: 170px;\r\n        padding: 20px;\r\n        border: 1px solid #d9d9d9;\r\n        border-radius: 12px;\r\n        h3 {\r\n          font-size: 18px;\r\n          margin-bottom: 20px;\r\n        }\r\n        .company-info {\r\n          font-size: 15px;\r\n          div {\r\n            letter-spacing: 1;\r\n            :first-of-type {\r\n              display: flex;\r\n              gap: 40px;\r\n              span {\r\n                :first-of-type {\r\n                  font-weight: 500;\r\n                }\r\n              }\r\n              margin-bottom: 10px;\r\n            }\r\n            :last-of-type {\r\n              display: flex;\r\n              gap: 10px;\r\n              span {\r\n                line-height: 18px;\r\n                :first-of-type {\r\n                  display: flex;\r\n                  gap: 10px;\r\n                  font-weight: 500;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PagiWrap = styled.div`\r\n  position: fixed;\r\n  left: 40.5%;\r\n  bottom: 30px;\r\n  ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 25px;\r\n    li {\r\n      display: inline-block;\r\n      width: 25px;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      a {\r\n        text-decoration: none;\r\n        color: #000;\r\n        font-size: 15px;\r\n        line-height: 15px;\r\n      }\r\n    }\r\n    .active a {\r\n      color: #fff;\r\n    }\r\n    .active {\r\n      background-color: #228fcf;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { PagiWrap } from \"../../styles/PagingStyle\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { ListPagingSty } from \"../../styles/ListPagingStyle\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CompanyListPaging = ({ page, setPage, count }) => {\r\n  return (\r\n    //  <PagiWrap>\r\n    //   <Pagination\r\n    //     activePage={page}\r\n    //     itemsCountPerPage={12}\r\n    //     totalItemsCount={count}\r\n    //     pageRangeDisplayed={10}\r\n    //     marginPagesDisplayed={0}\r\n    //     prevPageText={\"‹\"}\r\n    //     nextPageText={\"›\"}\r\n    //     onChange={setPage}\r\n    //   /> \r\n    //    </PagiWrap>\r\n    <ListPagingSty>\r\n      <Pagination\r\n        activePage={page}\r\n        itemsCountPerPage={12}\r\n        totalItemsCount={count}\r\n        pageRangeDisplayed={10}\r\n        marginPagesDisplayed={0}\r\n        prevPageText={<FontAwesomeIcon icon={faChevronLeft} />}\r\n        nextPageText={<FontAwesomeIcon icon={faChevronRight} />}\r\n        firstPageText={\"\"}\r\n        lastPageText={\"\"}\r\n        onChange={setPage}\r\n      />\r\n    </ListPagingSty>\r\n  );\r\n};\r\n\r\nexport default CompanyListPaging;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ConnectCompanyWrap } from \"../../styles/ConnectCompanyStyle\";\r\nimport CompanyListPaging from \"../../components/student/CompanyListPaging\";\r\nimport { getCompanyList } from \"../../api/companyListAxios\";\r\nimport OkModal from \"../../components/OkModal\";\r\n\r\nconst ConnectCompany = () => {\r\n  // api 오류 메세지 받아오는 state.\r\n  const [apiErrorModalOpen, setApiErrorModalOpen] = useState(false);\r\n  const [errorApiInfo, setErrorApiInfo] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [listData, setListData] = useState([]);\r\n  useEffect(() => {\r\n    getCompanyList(setListData, setCount, page, setErrorApiInfo);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (errorApiInfo) {\r\n      setApiErrorModalOpen(true);\r\n    } else {\r\n      setApiErrorModalOpen(false);\r\n    }\r\n  }, [errorApiInfo]);\r\n  return (\r\n    <ConnectCompanyWrap>\r\n      <h2>협약 기업 목록</h2>\r\n      <div className=\"connect-company-inner\">\r\n        <ul>\r\n          {listData &&\r\n            listData.map((item, index) => (\r\n              <li key={item.companyCode}>\r\n                <h3>{item.companyName}</h3>\r\n                <div className=\"company-info\">\r\n                  <div>\r\n                    <span>지역</span>\r\n                    <span>{item.area}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span>홈페이지</span>\r\n                    <span>{item.homepage}</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <CompanyListPaging page={page} setPage={setPage} count={count} />\r\n\r\n      {/* api 에러 확인모달 */}\r\n      {apiErrorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={apiErrorModalOpen}\r\n          close={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorApiInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </ConnectCompanyWrap>\r\n  );\r\n};\r\n\r\nexport default ConnectCompany;\r\n","import client from \"../api/client\";\r\n\r\nexport const getCompanyList = async (\r\n  setListData,\r\n  setCount,\r\n  page,\r\n  setErrorApiInfo,\r\n) => {\r\n  try {\r\n    const res = await client.get(`/student/company?page=${page}&size=12`);\r\n    setListData(res.data.list);\r\n    setCount(res.data.page.idx);\r\n  } catch (error) {\r\n    setErrorApiInfo(`Company List : ${error.message}`);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const ListPagingSty = styled.div`\r\n  ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 !important;\r\n    margin-top: 25px;\r\n    li {\r\n      display: inline-block;\r\n      width: 25px;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n\r\n      a {\r\n        color: #bababa;\r\n        text-decoration: none;\r\n        font-size: 12px;\r\n        line-height: 14px;\r\n        text-align: center;\r\n        font-weight: 400;\r\n        letter-spacing: -0.56px;\r\n        font-style: normal;\r\n      }\r\n    }\r\n    .active a {\r\n      color: ${Maincolor.black};\r\n      font-style: italic;\r\n      font-size: 14px;\r\n    }\r\n    .active {\r\n      /* background-color: ${Maincolor.admintxt}; */\r\n    }\r\n  }\r\n  @media all and (max-width: 767px) {\r\n    ul {\r\n      margin-top: 0;\r\n      padding-bottom: 20px !important;\r\n    }\r\n  }\r\n`;\r\n"],"names":["client","axios","create","baseURL","headers","setAuthHeader","accessToken","getCookie","defaults","common","concat","interceptors","request","use","async","config","error","Promise","reject","response","originalRequest","refreshToken","status","post","data","setCookie","console","removeAuth","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","handleLoginError","removeCookie","postLogout","_ref","header","open","close","onConfirm","children","log","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","ConnectCompanyWrap","styled","div","_templateObject","_taggedTemplateLiteral","page","setPage","count","ListPagingSty","Pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","marginPagesDisplayed","prevPageText","FontAwesomeIcon","icon","faChevronLeft","nextPageText","faChevronRight","firstPageText","lastPageText","onChange","ConnectCompany","apiErrorModalOpen","setApiErrorModalOpen","useState","errorApiInfo","setErrorApiInfo","setCount","listData","setListData","useEffect","get","list","idx","message","getCompanyList","map","item","index","companyName","area","homepage","companyCode","CompanyListPaging","OkModal","Maincolor","black","admintxt"],"sourceRoot":""}