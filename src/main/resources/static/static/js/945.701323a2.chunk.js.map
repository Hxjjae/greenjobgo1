{"version":3,"file":"static/js/945.701323a2.chunk.js","mappings":"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","sources":["styles/CompanyMgmtStyle.js","components/companymgmt/CompanyList.js","components/companymgmt/CompanySearch.js","components/companymgmt/CompanyPaging.js","pages/CompanyMgmt.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Maincolor, ellipsis } from \"./GlobalStyle\";\r\n\r\nexport const CompanyMgmtWrap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  .company-title {\r\n    width: 1400px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 60px;\r\n    h3 {\r\n      margin: 30px 0;\r\n      font-size: 24px;\r\n      letter-spacing: -0.96px;\r\n      color: ${Maincolor.black};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CompanyMgmtInner = styled.div`\r\n  /* width: 100%; */\r\n  .company-search {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1400px;\r\n    height: 95px;\r\n    border-radius: 6px;\r\n    background: ${Maincolor.search};\r\n    gap: 10px;\r\n    > li {\r\n      line-height: 1;\r\n      .company-form {\r\n        display: flex;\r\n        gap: 5px;\r\n        input {\r\n          padding-left: 10px;\r\n          width: 725px;\r\n          height: 40px;\r\n          border: 1px solid ${Maincolor.input};\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n      > button {\r\n        width: 140px;\r\n        height: 40px;\r\n        cursor: pointer;\r\n        border: none;\r\n        border-radius: 5px;\r\n        background: ${Maincolor.btn};\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  .company-buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    /* height: 80px; */\r\n    gap: 5px;\r\n    margin-top: 40px;\r\n    margin-bottom: 0;\r\n\r\n    button {\r\n      color: #fff;\r\n      background: ${Maincolor.btn};\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      :first-of-type {\r\n        background: ${Maincolor.input};\r\n        width: 105px;\r\n        height: 40px;\r\n      }\r\n      :nth-of-type(2) {\r\n        background: ${Maincolor.btn};\r\n        width: 105px;\r\n        height: 40px;\r\n      }\r\n      :nth-of-type(3) {\r\n        background: ${Maincolor.admintxt};\r\n        width: 105px;\r\n        height: 40px;\r\n      }\r\n      :nth-of-type(4) {\r\n        background: ${Maincolor.admintxt};\r\n        width: 105px;\r\n        height: 40px;\r\n      }\r\n    }\r\n  }\r\n  .total-count {\r\n    font-size: 14px;\r\n    color: #888888;\r\n    height: 14px;\r\n    line-height: 14px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport const CompanyTable = styled.div`\r\n  position: relative;\r\n  width: 1400px;\r\n  height: 54vh;\r\n  text-align: center;\r\n  /* border: 1px solid ${Maincolor.sectiontitle}; */\r\n  /* border-radius: 5px; */\r\n  overflow: hidden;\r\n  background: #fff;\r\n  /* box-shadow: 0px 0.5px 5px 0px rgba(0, 0, 0, 0.2); */\r\n  /* box-sizing: border-box; */\r\n  > ul {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(11, 43px);\r\n    border-top: 1px solid ${Maincolor.sectiontitle};\r\n    > li {\r\n      line-height: 42px;\r\n      /* border-top: 1px solid ${Maincolor.sectiontitle}; */\r\n      border: 1px solid ${Maincolor.sectiontitle};\r\n      border-bottom: none;\r\n      :first-of-type {\r\n        background: ${Maincolor.search};\r\n        color: ${Maincolor.black};\r\n        border-top: 0;\r\n      }\r\n      :last-of-type {\r\n        border-bottom: 1px solid ${Maincolor.sectiontitle};\r\n      }\r\n      > ul {\r\n        height: 100%;\r\n        display: grid;\r\n        grid-template-columns: 0.15fr 0.25fr 0.6fr 1fr 0.4fr 0.4fr 0.45fr 0.55fr 1fr;\r\n        > li {\r\n          > a {\r\n            color: ${Maincolor.black};\r\n            :hover {\r\n              color: ${Maincolor.admintxt};\r\n            }\r\n          }\r\n          padding: 0 5px;\r\n          ${ellipsis.one}\r\n          :not(:first-of-type,:last-of-type) {\r\n            cursor: pointer;\r\n          }\r\n          :not(:last-of-type) {\r\n            border-bottom: none;\r\n            border-right: 1px solid ${Maincolor.sectiontitle};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { EdeitCompanyModal } from \"./CompanyModal\";\r\n\r\nconst CompanyList = ({\r\n  listData,\r\n  handleAllCheck,\r\n  handleCheckBox,\r\n  page,\r\n  acceptOkModal,\r\n  setAcceptOkModal,\r\n  uploadResult,\r\n  setUpLoadResult,\r\n  fetchData,\r\n  setErrorApiInfo\r\n}) => {\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [companyInfo, setCompanyInfo] = useState(null);\r\n  const handleEditModalOpen = data => {\r\n    setCompanyInfo(data);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setEditModalOpen(false);\r\n    document.body.style.overflow = \"unset\";\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      <li className=\"company-list\">\r\n        <ul>\r\n          <li className=\"company-table-th\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"all-check-box\"\r\n              onChange={e => handleAllCheck(e)}\r\n              className=\"all-checkbox-btn\"\r\n            />\r\n          </li>\r\n          <li className=\"company-table-th\">번호</li>\r\n          <li className=\"company-table-th\">지역</li>\r\n          <li className=\"company-table-th\">기업명</li>\r\n          <li className=\"company-table-th\">대표명</li>\r\n          <li className=\"company-table-th\">담당자</li>\r\n          <li className=\"company-table-th\">연락처</li>\r\n          <li className=\"company-table-th\">체결일자</li>\r\n          <li className=\"company-table-th\">홈페이지</li>\r\n        </ul>\r\n      </li>\r\n      {listData.length > 0 &&\r\n        listData.map((item, index) => (\r\n          <li\r\n            key={item.companyCode}\r\n            onClick={e =>\r\n              !e.target.classList.contains(\"check-box-li\") &&\r\n              handleEditModalOpen(item)\r\n            }\r\n          >\r\n            <ul>\r\n              <li className=\"check-box-li\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"check-box\"\r\n                  defaultChecked={false}\r\n                  className={`company-checkbox userId${item.companyCode}`}\r\n                  onChange={e => handleCheckBox(e)}\r\n                  onClick={e => e.stopPropagation()}\r\n                />\r\n              </li>\r\n              <li>{(page - 1) * 10 + index + 1}</li>\r\n              <li>{item.area}</li>\r\n              <li>{item.companyName}</li>\r\n              <li>{item.leaderName}</li>\r\n              <li>{item.manager}</li>\r\n              <li>{item.phoneNumber}</li>\r\n              <li>{item.dateConslusion}</li>\r\n              <li className=\"check-box-li\" onClick={e => e.stopPropagation()}>\r\n                <a\r\n                  href={`https://${item.homepage}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {item.homepage}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      {editModalOpen && (\r\n        <EdeitCompanyModal\r\n          companyInfo={companyInfo}\r\n          editModalOpen={editModalOpen}\r\n          setEditModalOpen={setEditModalOpen}\r\n          handleModalCancel={handleModalCancel}\r\n          acceptOkModal={acceptOkModal}\r\n          setAcceptOkModal={setAcceptOkModal}\r\n          uploadResult={uploadResult}\r\n          setUpLoadResult={setUpLoadResult}\r\n          fetchData={fetchData}\r\n          setErrorApiInfo={setErrorApiInfo}\r\n        />\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CompanyList;\r\n","import React from \"react\";\r\n\r\nconst CompanySearch = ({\r\n  search,\r\n  setSearch,\r\n  handleSearch,\r\n}) => {\r\n  return (\r\n    <ul className=\"company-search\">\r\n      <li>\r\n        <div className=\"company-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"기업 이름을 검색하세요.\"\r\n            name=\"category-state\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            onKeyDown={e => {\r\n              if (e.key === \"Enter\") {\r\n                handleSearch();\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <button onClick={handleSearch}>검색</button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CompanySearch;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { PagiWrap } from \"../../styles/PagingStyle\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PortfolioPagingSty } from \"../../styles/portfoliopagingstyle\";\r\n\r\nconst Paging = ({ page, setPage, count }) => {\r\n  return (\r\n    <PortfolioPagingSty>\r\n    <Pagination\r\n      activePage={page}\r\n      itemsCountPerPage={10}\r\n      totalItemsCount={count}\r\n      pageRangeDisplayed={10}\r\n      marginPagesDisplayed={0}\r\n      prevPageText={<FontAwesomeIcon icon={faChevronLeft} />}\r\n      nextPageText={<FontAwesomeIcon icon={faChevronRight} />}\r\n      firstPageText={\"\"}\r\n      lastPageText={\"\"}\r\n      onChange={setPage}\r\n    />\r\n  </PortfolioPagingSty>\r\n  );\r\n};\r\n\r\nexport default Paging;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CompanyMgmtInner,\r\n  CompanyMgmtWrap,\r\n  CompanyTable,\r\n} from \"../styles/CompanyMgmtStyle\";\r\nimport {\r\n  getCompanyList,\r\n  getCompanyListDownload,\r\n  postCompanyAccept,\r\n  postCompanyExcel,\r\n} from \"../api/companyAxios\";\r\nimport CompanyList from \"../components/companymgmt/CompanyList\";\r\nimport CompanySearch from \"../components/companymgmt/CompanySearch\";\r\nimport Paging from \"../components/companymgmt/CompanyPaging\";\r\nimport {\r\n  DeleteCompanyModal,\r\n  CompanyMgmtModal,\r\n  ExcelUploadModal,\r\n} from \"../components/companymgmt/CompanyModal\";\r\nimport { AcceptModal, ExcelAcceptModal } from \"../components/AcceptModals\";\r\nimport ErrorModal from \"../components/ErrorModal\";\r\nimport NoListItem from \"../components/NoListItem\";\r\n\r\nconst CompanyMgmt = () => {\r\n  const [nothing, setNothing] = useState(false);\r\n\r\n  const [listData, setListData] = useState([]);\r\n  const [saveCheckBox, setSaveCheckBox] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\r\n  const [excelModalOpen, setExcelModalOpen] = useState(false);\r\n  const [excelOkModal, setExcelOkModal] = useState(false);\r\n  const [excelDownload, setExcelDownload] = useState(null);\r\n  const [acceptOkModal, setAcceptOkModal] = useState(false);\r\n  const [uploadResult, setUpLoadResult] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  // 예외처리하기\r\n  const [areaError, setAreaError] = useState(\"\");\r\n  const [companyNameError, setCompanyNameError] = useState(\"\");\r\n  const [leaderNameError, setLeaderNameError] = useState(\"\");\r\n  // const [homepageError, setHomepageError] = useState(\"\");\r\n  const [managerError, setManagerError] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(\"\");\r\n  const [dateConslusionError, setDateConslusionError] = useState(\"\");\r\n\r\n  // api 오류 메세지 받아오는 state.\r\n  const [apiErrorModalOpen, setApiErrorModalOpen] = useState(false);\r\n  const [errorApiInfo, setErrorApiInfo] = useState(\"\");\r\n\r\n  const [payload, setPayload] = useState({\r\n    area: \"\",\r\n    companyName: \"\",\r\n    leaderName: \"\",\r\n    homepage: \"\",\r\n    manager: \"\",\r\n    phoneNumber: \"\",\r\n    dateConslusion: \"\",\r\n  });\r\n\r\n  let resultIdArray = saveCheckBox;\r\n\r\n  const handleAllCheck = e => {\r\n    const allCheckBox = document.querySelectorAll(\".company-checkbox\");\r\n    resultIdArray = [];\r\n    if (e.target.checked === true) {\r\n      allCheckBox.forEach(item => {\r\n        item.checked = true;\r\n        resultIdArray.push(parseInt(item.classList[1].slice(6)));\r\n      });\r\n    } else {\r\n      allCheckBox.forEach(item => {\r\n        item.checked = false;\r\n      });\r\n      resultIdArray = [];\r\n    }\r\n    setSaveCheckBox(resultIdArray);\r\n  };\r\n\r\n  const handleCheckBox = e => {\r\n    const clickList = e.currentTarget;\r\n    const companyCode = parseInt(clickList.classList[1].slice(6));\r\n    if (e.target.checked === true) {\r\n      resultIdArray.push(companyCode);\r\n    } else {\r\n      resultIdArray = resultIdArray.filter(item => item !== companyCode);\r\n    }\r\n    setSaveCheckBox(resultIdArray);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    await getCompanyList(\r\n      setListData,\r\n      setCount,\r\n      page,\r\n      search,\r\n      setErrorApiInfo,\r\n      setNothing,\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\".all-checkbox-btn\").checked = false;\r\n    document\r\n      .querySelectorAll(\".company-checkbox\")\r\n      .forEach(item => (item.checked = false));\r\n    setSaveCheckBox([]);\r\n  }, [listData]);\r\n\r\n  const handleSearch = () => {\r\n    setPage(1);\r\n    fetchData();\r\n  };\r\n  const handleCategoryFiiter = e => {\r\n    setCategory(e.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setModalOpen(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    if (saveCheckBox.length >= 1) {\r\n      setDeleteModalOpen(true);\r\n    } else {\r\n      setErrorApiInfo(\"삭제하실 기업을 선택해주세요.\");\r\n    }\r\n  };\r\n\r\n  const handleExcelModalOpen = () => {\r\n    setExcelModalOpen(true);\r\n  };\r\n\r\n  const handleExcelUpload = async () => {\r\n    if (selectedFile) {\r\n      let formData = new FormData();\r\n      formData.append(\"companyfile\", selectedFile);\r\n\r\n      try {\r\n        const result = await postCompanyExcel(formData, setErrorApiInfo);\r\n\r\n        setUpLoadResult(result);\r\n\r\n        if (result.success) {\r\n          setExcelModalOpen(false);\r\n          setExcelOkModal(true);\r\n          setSelectedFile(null);\r\n        }\r\n      } catch (error) {\r\n        setErrorApiInfo(\"파일업로드에 실패했습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const phoneFormatter = num => {\r\n    try {\r\n      num = num.replace(/\\s/gi, \"\");\r\n\r\n      if (num.length === 11) {\r\n        return num.replace(/(\\d{3})(\\d{4})(\\d{4})/, \"$1-$2-$3\");\r\n      } else if (num.length === 10) {\r\n        return num.replace(/(\\d{3})(\\d{4})(\\d{3})/, \"$1-$2-$3\");\r\n      } else if (/^02/.test(num) && num.length === 9) {\r\n        return num.replace(/(\\d{2})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\r\n      } else {\r\n        return num;\r\n      }\r\n    } catch (err) {\r\n      return num;\r\n    }\r\n  };\r\n  const formatPhoneNumber = phoneFormatter(payload.phoneNumber);\r\n\r\n  // 기업등록버튼\r\n  const handleModalAccept = async () => {\r\n    try {\r\n      setCompanyNameError(\r\n        !payload.companyName ? \"기업명을 입력 해 주세요.\" : \"\",\r\n      );\r\n      setAreaError(!payload.area ? \"지역을 입력 해 주세요.\" : \"\");\r\n      setLeaderNameError(!payload.leaderName ? \"대표명을 입력 해 주세요.\" : \"\");\r\n      // setHomepageError(!payload.homepage ? \"홈페이지를 입력 해 주세요.\" : \"\");\r\n      setManagerError(!payload.manager ? \"담당자 이름을 입력 해 주세요.\" : \"\");\r\n      setPhoneNumberError(\r\n        !payload.phoneNumber ? \"연락처를 입력 해 주세요.\" : \"\",\r\n      );\r\n      // setDateConslusionError(\r\n      //   !payload.dateConslusion ? \"체결일자를 선택 해 주세요.\" : \"\",\r\n      // );\r\n\r\n      const isError =\r\n        !payload.companyName ||\r\n        !payload.area ||\r\n        !payload.leaderName ||\r\n        !payload.manager ||\r\n        !payload.phoneNumber;\r\n      // !payload.dateConslusion;\r\n\r\n      if (!isError) {\r\n        const result = await postCompanyAccept(payload, setErrorApiInfo);\r\n        setUpLoadResult(result);\r\n        setModalOpen(false);\r\n\r\n        if (result.success) {\r\n          setModalOpen(false);\r\n          // setAcceptOkModal(true);\r\n          setPayload({\r\n            area: \"\",\r\n            companyName: \"\",\r\n            leaderName: \"\",\r\n            homepage: \"\",\r\n            manager: \"\",\r\n            phoneNumber: \"\",\r\n            dateConslusion: \"\",\r\n          });\r\n          fetchData();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setModalOpen(false);\r\n      // setAcceptOkModal(true);\r\n      setPayload({\r\n        area: \"\",\r\n        companyName: \"\",\r\n        leaderName: \"\",\r\n        homepage: \"\",\r\n        manager: \"\",\r\n        phoneNumber: \"\",\r\n        dateConslusion: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleExcelDownLoad = async () => {\r\n    getCompanyListDownload(setExcelDownload);\r\n  };\r\n  useEffect(() => {\r\n    if (errorApiInfo) {\r\n      setApiErrorModalOpen(true);\r\n    } else {\r\n      setApiErrorModalOpen(false);\r\n    }\r\n  }, [errorApiInfo]);\r\n\r\n  return (\r\n    <CompanyMgmtWrap>\r\n      <div className=\"company-title\">\r\n        <h3>기업 등록 · 관리</h3>\r\n      </div>\r\n      <CompanyMgmtInner>\r\n        <CompanySearch\r\n          category={category}\r\n          handleCategoryFiiter={handleCategoryFiiter}\r\n          search={search}\r\n          setSearch={setSearch}\r\n          handleSearch={handleSearch}\r\n        />\r\n        {/* 기업등록 모달 */}\r\n        {modalOpen && (\r\n          <CompanyMgmtModal\r\n            modalOpen={modalOpen}\r\n            setModalOpen={setModalOpen}\r\n            payload={payload}\r\n            setPayload={setPayload}\r\n            handleModalAccept={handleModalAccept}\r\n            areaError={areaError}\r\n            companyNameError={companyNameError}\r\n            leaderNameError={leaderNameError}\r\n            // homepageError={homepageError}\r\n            managerError={managerError}\r\n            phoneNumberError={phoneNumberError}\r\n            dateConslusionError={dateConslusionError}\r\n            formatPhoneNumber={formatPhoneNumber}\r\n          />\r\n        )}\r\n        {/* 등록확인모달 */}\r\n        {acceptOkModal && (\r\n          <AcceptModal\r\n            acceptOkModal={acceptOkModal}\r\n            setAcceptOkModal={setAcceptOkModal}\r\n            uploadResult={uploadResult}\r\n          />\r\n        )}\r\n        {/* 엑셀업로드 모달 */}\r\n        {excelModalOpen && (\r\n          <ExcelUploadModal\r\n            excelModalOpen={excelModalOpen}\r\n            setExcelModalOpen={setExcelModalOpen}\r\n            handleExcelUpload={handleExcelUpload}\r\n            selectedFile={selectedFile}\r\n            setSelectedFile={setSelectedFile}\r\n            excelOkModal={excelOkModal}\r\n            setExcelOkModal={setExcelOkModal}\r\n          />\r\n        )}\r\n        {/* 기업삭제모달 */}\r\n        {deleteModalOpen && (\r\n          <DeleteCompanyModal\r\n            deleteModalOpen={deleteModalOpen}\r\n            setDeleteModalOpen={setDeleteModalOpen}\r\n            saveCheckBox={saveCheckBox}\r\n            setSaveCheckBox={setSaveCheckBox}\r\n            setListData={setListData}\r\n            fetchData={fetchData}\r\n            setErrorApiInfo={setErrorApiInfo}\r\n          />\r\n        )}\r\n        {/* 엑셀업로드 확인모달 */}\r\n        {excelOkModal && (\r\n          <ExcelAcceptModal\r\n            excelOkModal={excelOkModal}\r\n            setExcelOkModal={setExcelOkModal}\r\n            uploadResult={uploadResult}\r\n          />\r\n        )}\r\n        <div className=\"company-buttons\">\r\n          <button onClick={handleDeleteClick}>삭제</button>\r\n          <button onClick={handleExcelDownLoad}>엑셀 다운로드</button>\r\n          <button onClick={handleExcelModalOpen}>엑셀 업로드</button>\r\n          <button onClick={handleModalOpen}>기업등록</button>\r\n        </div>\r\n        <div className=\"total-count\">\r\n          <span>총 {count}개</span>\r\n        </div>\r\n        <CompanyTable>\r\n          {nothing && <NoListItem />}\r\n\r\n          <CompanyList\r\n            listData={listData}\r\n            handleAllCheck={handleAllCheck}\r\n            handleCheckBox={handleCheckBox}\r\n            page={page}\r\n            acceptOkModal={acceptOkModal}\r\n            setAcceptOkModal={setAcceptOkModal}\r\n            uploadResult={uploadResult}\r\n            setUpLoadResult={setUpLoadResult}\r\n            fetchData={fetchData}\r\n            setErrorApiInfo={setErrorApiInfo}\r\n          />\r\n        </CompanyTable>\r\n        <Paging page={page} setPage={setPage} count={count} />\r\n      </CompanyMgmtInner>\r\n\r\n      {/* api 에러 확인모달 */}\r\n      {apiErrorModalOpen && (\r\n        <ErrorModal\r\n          header={\"\"}\r\n          open={apiErrorModalOpen}\r\n          close={() => {\r\n            setApiErrorModalOpen(false);\r\n          }}\r\n          onConfirm={() => {\r\n            setApiErrorModalOpen(false);\r\n          }}\r\n        >\r\n          <span>{errorApiInfo}</span>\r\n        </ErrorModal>\r\n      )}\r\n    </CompanyMgmtWrap>\r\n  );\r\n};\r\n\r\nexport default CompanyMgmt;\r\n"],"names":["CompanyMgmtWrap","styled","div","_templateObject","_taggedTemplateLiteral","Maincolor","black","CompanyMgmtInner","_templateObject2","search","input","btn","admintxt","CompanyTable","_templateObject3","sectiontitle","ellipsis","one","_ref","listData","handleAllCheck","handleCheckBox","page","acceptOkModal","setAcceptOkModal","uploadResult","setUpLoadResult","fetchData","setErrorApiInfo","editModalOpen","setEditModalOpen","useState","companyInfo","setCompanyInfo","_jsxs","children","_jsx","className","type","name","onChange","e","length","map","item","index","onClick","target","classList","contains","defaultChecked","concat","companyCode","stopPropagation","area","companyName","leaderName","manager","phoneNumber","dateConslusion","href","homepage","rel","EdeitCompanyModal","handleModalCancel","document","body","style","overflow","setSearch","handleSearch","placeholder","value","onKeyDown","key","setPage","count","PortfolioPagingSty","Pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","marginPagesDisplayed","prevPageText","FontAwesomeIcon","icon","faChevronLeft","nextPageText","faChevronRight","firstPageText","lastPageText","CompanyMgmt","nothing","setNothing","setListData","saveCheckBox","setSaveCheckBox","setCount","category","setCategory","modalOpen","setModalOpen","deleteModalOpen","setDeleteModalOpen","excelModalOpen","setExcelModalOpen","excelOkModal","setExcelOkModal","excelDownload","setExcelDownload","selectedFile","setSelectedFile","areaError","setAreaError","companyNameError","setCompanyNameError","leaderNameError","setLeaderNameError","managerError","setManagerError","phoneNumberError","setPhoneNumberError","dateConslusionError","setDateConslusionError","apiErrorModalOpen","setApiErrorModalOpen","errorApiInfo","payload","setPayload","resultIdArray","async","getCompanyList","useEffect","querySelector","checked","querySelectorAll","forEach","formatPhoneNumber","num","replace","test","err","phoneFormatter","CompanySearch","handleCategoryFiiter","CompanyMgmtModal","handleModalAccept","result","postCompanyAccept","success","error","AcceptModal","ExcelUploadModal","handleExcelUpload","formData","FormData","append","postCompanyExcel","DeleteCompanyModal","ExcelAcceptModal","handleDeleteClick","getCompanyListDownload","handleExcelModalOpen","handleModalOpen","NoListItem","CompanyList","allCheckBox","push","parseInt","slice","clickList","currentTarget","filter","Paging","ErrorModal","header","open","close","onConfirm"],"sourceRoot":""}