{"version":3,"file":"static/js/22.2cabee00.chunk.js","mappings":"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","sources":["api/client.js","components/OkModal.js","styles/BusinessJobmanager.js","pages/businessPages/JobManagerList.js","api/jobmanagerAxios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, removeCookie, setCookie } from \"./cookie\";\r\n\r\nconst client = axios.create({\r\n  baseURL: \"/api\",\r\n  withXSRFToken: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst setAuthHeader = () => {\r\n  const accessToken = getCookie(\"accessToken\");\r\n  if (accessToken) {\r\n    client.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\r\n  } else {\r\n    delete client.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    setAuthHeader();\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const originalRequest = error.config;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    if (error.response.status === 401 && refreshToken) {\r\n      try {\r\n        const response = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n        const accessToken = response.data;\r\n        setCookie(\"accessToken\", accessToken);\r\n        setAuthHeader();\r\n        return client(originalRequest);\r\n      } catch (error) {\r\n        console.error(\"토큰 갱신 실패:\", error);\r\n        removeAuth();\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n    if (role && refreshToken && accessToken) {\r\n      setCookie(\"refreshToken\", refreshToken);\r\n      setCookie(\"accessToken\", accessToken);\r\n      setAuthHeader();\r\n      setErrorCancelInfo(\"\");\r\n      return { role, accessToken, refreshToken, vo, accessTokenTime };\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    handleLoginError(error, setErrorCancelInfo);\r\n  }\r\n};\r\n\r\n// 토큰삭제 함수\r\nconst removeAuth = () => {\r\n  removeCookie(\"accessToken\");\r\n  removeCookie(\"refreshToken\");\r\n  delete client.defaults.headers.common[\"Authorization\"];\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async () => {\r\n  try {\r\n    await client.post(\"/sign/logout\");\r\n    removeAuth();\r\n  } catch (error) {\r\n    console.error(\"로그아웃 실패:\", error);\r\n  }\r\n};\r\n\r\n// 예외처리 함수\r\nconst handleLoginError = (error, setErrorCancelInfo) => {\r\n  if (error.response.status === 432) {\r\n    setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n  } else if (error.response.status === 434) {\r\n    setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n  } else if (error.response.status === 435) {\r\n    setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n  } else if (error.response.status === 500) {\r\n    setErrorCancelInfo(\"서버 오류 입니다.\");\r\n  }\r\n  throw new Error(\"로그인에 실패했습니다.\");\r\n};\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const JobManagerBoxWrap = styled.div`\r\n  /* padding: 40px; */\r\n  & > h2 {\r\n    color: ${Maincolor.black};\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 40px;\r\n    margin-top: 20px;\r\n  }\r\n  .jobmanager-content {\r\n    width: 1400px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    gap: 40px;\r\n    .manager-profile {\r\n      width: 440px;\r\n      height: 543px;\r\n      border-radius: 12px;\r\n      border: 1px ${Maincolor.grayLight2} solid;\r\n      padding: 40px;\r\n      .manager-img {\r\n        width: 170px;\r\n        height: 226px;\r\n        object-fit: contain;\r\n        margin-bottom: 25px;\r\n      }\r\n\r\n      .manager-details {\r\n        /* 담당자 한마디 */\r\n        font-weight: 500;\r\n        .manager-word {\r\n          font-size: 20px;\r\n          color: ${Maincolor.black};\r\n          margin-bottom: 14px;\r\n        }\r\n        /* 담당자 이름 */\r\n        .manager-name {\r\n          font-size: 16px;\r\n          margin-top: 14px;\r\n        }\r\n        /* 담당자 연락처 */\r\n        .manager-contact {\r\n          margin-top: 52px;\r\n          li {\r\n            display: flex;\r\n            justify-content: left;\r\n            align-items: center;\r\n            margin-top: 16px;\r\n            span:nth-of-type(1) {\r\n              width: 60px;\r\n              font-size: 14px;\r\n              font-weight: 700;\r\n              margin-right: 10px;\r\n            }\r\n            span:nth-of-type(2) {\r\n              font-weight: 400;\r\n              font-size: 16px;\r\n              letter-spacing: -0.24px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { JobManagerBoxWrap } from \"../../styles/BusinessJobmanager\";\r\nimport NoImage from \"../../assets/NoImage.jpg\";\r\nimport { getJobManagerInfo } from \"../../api/jobmanagerAxios\";\r\nimport OkModal from \"../../components/OkModal\";\r\n\r\nconst JobManagerList = () => {\r\n  const [mngProfiledata, setmngProflieData] = useState([]);\r\n  const [nothing, setNothing] = useState(false);\r\n\r\n  // api 오류 메세지 받아오는 state.\r\n  const [apiErrorModalOpen, setApiErrorModalOpen] = useState(false);\r\n  const [errorApiInfo, setErrorApiInfo] = useState(\"\");\r\n\r\n  // 이미지 없을 때 error처리\r\n  const onImgError = e => {\r\n    e.target.src = NoImage;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobManagerInfo({ setmngProflieData, setNothing, setErrorApiInfo });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (errorApiInfo) {\r\n      setApiErrorModalOpen(true);\r\n    } else {\r\n      setApiErrorModalOpen(false);\r\n    }\r\n  }, [errorApiInfo]);\r\n  return (\r\n    <JobManagerBoxWrap>\r\n      <h2>취업담당자 안내</h2>\r\n      <div className=\"jobmanager-content\">\r\n        {mngProfiledata?.map(item => (\r\n          <div className=\"manager-profile\" key={item.iemply}>\r\n            <img\r\n              // src={`/home/download/Employee/${item.iemply}/${item.profilePic}`}\r\n              src={`${item.profilePic}`}\r\n              alt=\"job manager\"\r\n              onError={onImgError}\r\n              className=\"manager-img\"\r\n            />\r\n            <div className=\"manager-details\">\r\n              <p className=\"manager-word\">{item.oneWord}</p>\r\n              <p className=\"manager-name\">{item.name} 취업지원실장</p>\r\n              <ul className=\"manager-contact\">\r\n                <li>\r\n                  <span>상담전화</span>\r\n                  <span>{item.counselingNumber}</span>\r\n                </li>\r\n                <li>\r\n                  <span>모바일</span>\r\n                  <span>{item.phoneNumber}</span>\r\n                </li>\r\n                <li>\r\n                  <span>이메일</span>\r\n                  <span>{item.email}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {nothing && <div>취업담당자의 정보가 없습니다.</div>}\r\n\r\n      {/* api 에러 확인모달 */}\r\n      {apiErrorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={apiErrorModalOpen}\r\n          close={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorApiInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </JobManagerBoxWrap>\r\n  );\r\n};\r\n\r\nexport default JobManagerList;\r\n","import client from \"../api/client\";\r\n\r\nexport const getJobManagerInfo = async ({\r\n  setmngProflieData,\r\n  setNothing,\r\n  setErrorApiInfo,\r\n}) => {\r\n  try {\r\n    const res = await client.get(`/company/employee`);\r\n    const result = await res.data;\r\n\r\n    console.log(\"job mng 정보 들어옴\", result);\r\n    setmngProflieData(result);\r\n    setNothing(false);\r\n    if (result.length === 0) {\r\n      setNothing(true);\r\n      console.log(\"결과 없어요\");\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    setErrorApiInfo(`JobManager Info: ${error.message}`);\r\n  }\r\n};\r\n"],"names":["client","axios","create","baseURL","withXSRFToken","headers","setAuthHeader","accessToken","getCookie","defaults","common","concat","interceptors","request","use","async","config","error","Promise","reject","response","originalRequest","refreshToken","status","post","data","setCookie","console","removeAuth","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","handleLoginError","removeCookie","postLogout","_ref","header","open","close","onConfirm","children","log","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","JobManagerBoxWrap","styled","div","_templateObject","_taggedTemplateLiteral","Maincolor","black","grayLight2","JobManagerList","mngProfiledata","setmngProflieData","useState","nothing","setNothing","apiErrorModalOpen","setApiErrorModalOpen","errorApiInfo","setErrorApiInfo","onImgError","target","NoImage","useEffect","get","result","length","message","getJobManagerInfo","map","item","profilePic","onError","oneWord","name","counselingNumber","phoneNumber","iemply","OkModal"],"sourceRoot":""}