{"version":3,"file":"static/js/947.5f64b593.chunk.js","mappings":"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","sources":["api/client.js","components/OkModal.js","styles/LoginStyle.js","pages/Login.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, removeCookie, setCookie } from \"./cookie\";\r\n\r\nconst client = axios.create({\r\n  baseURL: \"/api\",\r\n  withXSRFToken: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// const setAuthHeader = () => {\r\n//   const accessToken = getCookie(\"accessToken\");\r\n//   if (accessToken) {\r\n//     client.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//   } else {\r\n//     delete client.defaults.headers.common[\"Authorization\"];\r\n//   }\r\n// };\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    const accessToken = getCookie(\"accessToken\");\r\n    if (accessToken) {\r\n      config.headers.Authorization = `Bearer ${accessToken}`;\r\n      if (!config.headers) {\r\n        config.headers = {};\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const { config, response } = error;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    if (response?.status === 401 && refreshToken) {\r\n      try {\r\n        const { data } = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n        const accessToken = data;\r\n        setCookie(\"accessToken\", accessToken);\r\n        if (config?.headers && config.headers?.Authorization) {\r\n          config.headers.Authorization = `Bearer ${accessToken}`;\r\n          const retryResponse = await client(config);\r\n          return retryResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"토큰 갱신 실패:\", error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n// client.interceptors.response.use(\r\n//   response => {\r\n//     return response;\r\n//   },\r\n//   async error => {\r\n//     const originalRequest = error.config;\r\n//     const refreshToken = getCookie(\"refreshToken\");\r\n//     if (error.response.status === 401 && refreshToken) {\r\n//       try {\r\n//         const response = await client.post(`/sign/refresh-token`, {\r\n//           refreshToken,\r\n//         });\r\n//         const accessToken = response.data;\r\n//         setCookie(\"accessToken\", accessToken);\r\n//         setAuthHeader();\r\n//         return client(originalRequest);\r\n//       } catch (error) {\r\n//         console.error(\"토큰 갱신 실패:\", error);\r\n//         removeAuth();\r\n//         return Promise.reject(error);\r\n//       }\r\n//     }\r\n//     console.error(\"요청 실패:\", error);\r\n//     return Promise.reject(error);\r\n//   },\r\n// );\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n    if (role && refreshToken && accessToken) {\r\n      setCookie(\"refreshToken\", refreshToken);\r\n      setCookie(\"accessToken\", accessToken);\r\n      setErrorCancelInfo(\"\");\r\n      return { role, accessToken, refreshToken, vo, accessTokenTime };\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    handleLoginError(error, setErrorCancelInfo);\r\n  }\r\n};\r\n\r\n// 토큰삭제 함수\r\nconst removeAuth = () => {\r\n  removeCookie(\"accessToken\");\r\n  removeCookie(\"refreshToken\");\r\n  delete client.defaults.headers.common[\"Authorization\"];\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async () => {\r\n  try {\r\n    await client.post(\"/sign/logout\");\r\n    removeAuth();\r\n  } catch (error) {\r\n    console.error(\"로그아웃 실패:\", error);\r\n  }\r\n};\r\n\r\n// 예외처리 함수\r\nconst handleLoginError = (error, setErrorCancelInfo) => {\r\n  if (error.response.status === 432) {\r\n    setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n  } else if (error.response.status === 434) {\r\n    setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n  } else if (error.response.status === 435) {\r\n    setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n  } else if (error.response.status === 500) {\r\n    setErrorCancelInfo(\"서버 오류 입니다.\");\r\n  }\r\n  throw new Error(\"로그인에 실패했습니다.\");\r\n};\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginWrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  @media all and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 100vh;\r\n  }\r\n`;\r\n\r\nexport const LoginInner = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  li {\r\n    :first-of-type {\r\n      width: 50%;\r\n      height: 100vh;\r\n      img {\r\n        width: 100%;\r\n        height: 100vh;\r\n      }\r\n    }\r\n    :last-of-type {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      gap: 30px;\r\n      margin-right: 12.5%;\r\n      .login-title {\r\n        padding-left: 65px;\r\n      }\r\n      form {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        gap: 25px;\r\n        div {\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          gap: 20px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          input {\r\n            width: 440px;\r\n            height: 40px;\r\n            border: 1px solid #aaa;\r\n            border-radius: 4px;\r\n            padding: 0 5px;\r\n          }\r\n          button {\r\n            width: 440px;\r\n            height: 50px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            color: #fff;\r\n            background: #228fcf;\r\n            border: none;\r\n            border-radius: 6px;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media all and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-top: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    li {\r\n      :first-of-type {\r\n        display: none;\r\n        img {\r\n          display: none;\r\n        }\r\n      }\r\n      :last-of-type {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        gap: 40px;\r\n        margin-right: 0;\r\n        .login-title {\r\n          padding-left: 0;\r\n          img {\r\n            width: 235px;\r\n            height: 20px;\r\n          }\r\n        }\r\n        form {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          flex-direction: column;\r\n          gap: 25px;\r\n          div {\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            align-items: center;\r\n            gap: 20px;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n            label {\r\n              display: none;\r\n            }\r\n            input {\r\n              width: 250px;\r\n              height: 35px;\r\n              border: 1px solid #aaa;\r\n              border-radius: 4px;\r\n              padding: 0 5px;\r\n            }\r\n            button {\r\n              width: 250px;\r\n              height: 40px;\r\n              font-size: 14px;\r\n              font-weight: 600;\r\n              color: #fff;\r\n              background: #228fcf;\r\n              border: none;\r\n              border-radius: 6px;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { fetchLogin, postLogout } from \"../api/client\";\r\nimport { LoginInner, LoginWrap } from \"../styles/LoginStyle\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { AuthStateAtom } from \"../recoil/atoms/AuthState\";\r\nimport OkModal from \"../components/OkModal\";\r\nimport { getCookie, setAcessCookie, setRefreshCookie } from \"../api/cookie\";\r\n\r\nconst Login = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [authState, setAuthState] = useRecoilState(AuthStateAtom);\r\n\r\n  // 로그인 오류 메세지 받아오는 state.\r\n  const [errorModalOpen, setErrorModalOpen] = useState(false);\r\n  const [errorCancelInfo, setErrorCancelInfo] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginId = e => {\r\n    setUserId(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  const handleLoginPass = e => {\r\n    setPassword(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      setErrorCancelInfo(\"아이디를 입력해 주세요.\");\r\n      return;\r\n    } else if (!password) {\r\n      setErrorCancelInfo(\"비밀번호를 입력해 주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        const { role, accessToken, refreshToken, vo, accessTokenTime } =\r\n          await fetchLogin(userId, password, setErrorCancelInfo);\r\n        if (role === \"ROLE_USER\" && accessToken) {\r\n          console.log(role);\r\n          setAuthState({\r\n            isLogin: true,\r\n            role: role,\r\n            editableYn: vo?.editableYn,\r\n            portfolioYn: vo?.portfolioYn,\r\n            aboutMeYn: vo?.aboutMeYn,\r\n          });\r\n          navigate(\"/student\");\r\n        } else if (role === \"ROLE_COMPANY\" && accessToken) {\r\n          setAuthState({\r\n            isLogin: true,\r\n            role: role,\r\n          });\r\n          navigate(\"/business\");\r\n\r\n          setTimeout(() => {\r\n            if (role === \"ROLE_COMPANY\") {\r\n              postLogout(accessToken, refreshToken);\r\n              setAuthState({\r\n                isLogin: false,\r\n                accessToken: null,\r\n                role: \"\",\r\n              });\r\n              navigate(\"/\");\r\n            }\r\n          }, accessTokenTime);\r\n          console.log(accessTokenTime);\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\"errorrrrrrrr\", error);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (errorCancelInfo) {\r\n      setErrorModalOpen(true);\r\n    } else {\r\n      setErrorModalOpen(false);\r\n    }\r\n  }, [errorCancelInfo]);\r\n\r\n  return (\r\n    <LoginWrap>\r\n      <LoginInner>\r\n        <li>\r\n          <img src=\"../../assets/Login.png\" alt=\"LoginImage\" />\r\n        </li>\r\n        <li>\r\n          <div className=\"login-title\">\r\n            <img src=\"../../assets/LoginTitle.png\" alt=\"LoginTitle\" />\r\n          </div>\r\n          <form>\r\n            <div>\r\n              <label htmlFor=\"login-id\">아이디</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"login-id\"\r\n                placeholder=\"아이디를 입력해주세요.\"\r\n                value={userId}\r\n                onChange={e => handleLoginId(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"login-password\">비밀번호</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"login-password\"\r\n                placeholder=\"비밀번호를 입력해주세요.\"\r\n                value={password}\r\n                onChange={e => handleLoginPass(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button onClick={handleSubmit}>로그인</button>\r\n            </div>\r\n          </form>\r\n        </li>\r\n      </LoginInner>\r\n      {/* api 에러 확인모달 */}\r\n      {errorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={errorModalOpen}\r\n          close={() => {\r\n            setErrorModalOpen(false), setErrorCancelInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setErrorModalOpen(false), setErrorCancelInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorCancelInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </LoginWrap>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["client","axios","create","baseURL","withXSRFToken","headers","interceptors","request","use","async","accessToken","getCookie","config","Authorization","concat","error","Promise","reject","response","refreshToken","status","_config$headers","data","post","setCookie","console","log","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","handleLoginError","postLogout","removeCookie","defaults","common","_ref","header","open","close","onConfirm","children","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","LoginWrap","styled","div","_templateObject","_taggedTemplateLiteral","LoginInner","ul","_templateObject2","Login","setUserId","useState","setPassword","authState","setAuthState","useRecoilState","AuthStateAtom","errorModalOpen","setErrorModalOpen","errorCancelInfo","navigate","useNavigate","useEffect","htmlFor","type","id","placeholder","value","onChange","target","handleLoginId","handleLoginPass","preventDefault","isLogin","editableYn","portfolioYn","aboutMeYn","setTimeout","OkModal"],"sourceRoot":""}