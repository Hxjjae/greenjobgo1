{"version":3,"file":"static/js/577.8ad9c6b5.chunk.js","mappings":"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","sources":["pages/StudentMgmt.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { atom, RecoilEnv, useRecoilState } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\nimport StudentSearch from \"../components/studentmgmt/StudentSearch\";\r\nimport StudentList from \"../components/studentmgmt/StudentList\";\r\nimport StudentPaging from \"../components/studentmgmt/StudentPaging\";\r\nimport {\r\n  getStudenListDownload,\r\n  getStudentList,\r\n  postExcelSign,\r\n} from \"../api/studentAxios\";\r\nimport {\r\n  StudentMgmtInner,\r\n  StudentMgmtWrap,\r\n  StudentTable,\r\n} from \"../styles/StudentMgmtStyle\";\r\nimport {\r\n  DeleteStudnetModal,\r\n  StudentExcelUploadModal,\r\n  StudentModal,\r\n} from \"../components/studentmgmt/StudentModal\";\r\nimport { AcceptModal, ExcelAcceptModal } from \"../components/AcceptModals\";\r\nimport NoListItem from \"../components/NoListItem\";\r\nimport ErrorModal from \"../components/ErrorModal\";\r\n\r\nRecoilEnv.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED = false;\r\n\r\nconst { persistAtom } = recoilPersist();\r\n\r\nexport const StudentPageAtom = atom({\r\n  // key: `StudentPageAtom`,\r\n  key: `StudentPageAtom`,\r\n  default: {\r\n    page: 1,\r\n    count: 0,\r\n    search: \"\",\r\n    category: \"\",\r\n  },\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\nconst StudentMgmt = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // api 오류 메세지 받아오는 state.\r\n  const [apiErrorModalOpen, setApiErrorModalOpen] = useState(false);\r\n  const [errorApiInfo, setErrorApiInfo] = useState(\"\");\r\n\r\n  const [nothing, setNothing] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  // const [saveCheckBox, setSaveCheckBox] = useState([]);\r\n  // const [page, setPage] = useState(1);\r\n  // const [count, setCount] = useState(0);\r\n  // const [search, setSearch] = useState(\"\");\r\n  // const [category, setCategory] = useState(\"\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\r\n  const [excelModalOpen, setExcelModalOpen] = useState(false);\r\n  const [excelOkModal, setExcelOkModal] = useState(false);\r\n  const [acceptOkModal, setAcceptOkModal] = useState(false);\r\n  const [uploadResult, setUpLoadResult] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [excelDownload, setExcelDownload] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [cateValue, setCateValue] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [pageState, setPageState] = useRecoilState(StudentPageAtom);\r\n  const { page, count, search, category, render } = pageState;\r\n\r\n  // GET API\r\n  const fetchData = () => {\r\n    // getStudentList(setListData, setCount, page, search, category);\r\n    getStudentList(\r\n      setListData,\r\n      setPageState,\r\n      page,\r\n      search,\r\n      category,\r\n      setNothing,\r\n      setErrorApiInfo,\r\n    );\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   document.querySelector(\".all-checkbox-btn\").checked = false;\r\n  //   document\r\n  //     .querySelectorAll(\".student-checkbox\")\r\n  //     .forEach(item => (item.checked = false));\r\n  //   setSaveCheckBox([]);\r\n  // }, [listData]);\r\n\r\n  // 검색 버튼\r\n  const handleSearch = async () => {\r\n    setPageState(prev => ({\r\n      ...prev,\r\n      page: 1,\r\n      category,\r\n      search,\r\n    }));\r\n\r\n    // setPage(1);\r\n    await fetchData();\r\n  };\r\n\r\n  // 대분류 선택\r\n  const handleCategoryFiiter = e => {\r\n    // setCategory(e.target.value);\r\n    // setCateValue(e.target.value);\r\n    // setSearchValue(\"\");\r\n    setPageState(prev => ({\r\n      ...prev,\r\n      // page: 1,\r\n      category: e.target.value,\r\n      search: \"\",\r\n    }));\r\n  };\r\n\r\n  // 엑셀 업로드 버튼\r\n  const handleExcelModalOpen = () => {\r\n    setExcelModalOpen(true);\r\n  };\r\n\r\n  // 엑셀 업로드 POST API\r\n  const handleExcelUpload = async () => {\r\n    setIsLoading(true);\r\n    if (selectedFile) {\r\n      let formData = new FormData();\r\n      formData.append(\"studentfile\", selectedFile);\r\n\r\n      try {\r\n        const result = await postExcelSign(formData, setErrorApiInfo);\r\n\r\n        setIsLoading(false);\r\n\r\n        setUpLoadResult(result);\r\n\r\n        if (result.success) {\r\n          setExcelModalOpen(false);\r\n          // setExcelOkModal(true);\r\n          setSelectedFile(null);\r\n        }\r\n        fetchData();\r\n      } catch (error) {\r\n        console.error(\"파일 업로드에 실패했습니다.\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 엑셀 다운로드 버튼\r\n  const handleExcelDownLoad = async () => {\r\n    getStudenListDownload(setExcelDownload, setErrorApiInfo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errorApiInfo) {\r\n      setApiErrorModalOpen(true);\r\n    } else {\r\n      setApiErrorModalOpen(false);\r\n    }\r\n  }, [errorApiInfo]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // getCategory(setCategoryData);\r\n  }, [page, count]);\r\n\r\n  return (\r\n    <StudentMgmtWrap>\r\n      <div className=\"student-title\">\r\n        <h3>수강생 등록 · 관리</h3>\r\n      </div>\r\n      <StudentMgmtInner>\r\n        <StudentSearch\r\n          category={category}\r\n          // cateValue={cateValue}\r\n          // setSearchValue={setSearchValue}\r\n          handleCategoryFiiter={handleCategoryFiiter}\r\n          search={search}\r\n          // setSearch={setSearch}\r\n          handleSearch={handleSearch}\r\n          // categoryData={categoryData}\r\n          // setCategoryData={setCategoryData}\r\n        />\r\n        {modalOpen && (\r\n          <StudentModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\r\n        )}\r\n        {acceptOkModal && (\r\n          <AcceptModal\r\n            acceptOkModal={acceptOkModal}\r\n            setAcceptOkModal={setAcceptOkModal}\r\n            uploadResult={uploadResult}\r\n          />\r\n        )}\r\n        {excelModalOpen && (\r\n          <StudentExcelUploadModal\r\n            excelModalOpen={excelModalOpen}\r\n            setExcelModalOpen={setExcelModalOpen}\r\n            handleExcelUpload={handleExcelUpload}\r\n            selectedFile={selectedFile}\r\n            setSelectedFile={setSelectedFile}\r\n            excelOkModal={excelOkModal}\r\n            setExcelOkModal={setExcelOkModal}\r\n            isLoading={isLoading}\r\n          />\r\n        )}\r\n        {excelOkModal && (\r\n          <ExcelAcceptModal\r\n            excelOkModal={excelOkModal}\r\n            setExcelOkModal={setExcelOkModal}\r\n            uploadResult={uploadResult}\r\n          />\r\n        )}\r\n        {/* {deleteModalOpen && (\r\n          <DeleteStudnetModal\r\n            deleteModalOpen={deleteModalOpen}\r\n            setDeleteModalOpen={setDeleteModalOpen}\r\n            saveCheckBox={saveCheckBox}\r\n            setSaveCheckBox={setSaveCheckBox}\r\n            setListData={setListData}\r\n            fetchData={fetchData}\r\n          />\r\n        )} */}\r\n        <div className=\"student-buttons\">\r\n          <button onClick={handleExcelDownLoad}>엑셀 다운로드</button>\r\n          <button onClick={handleExcelModalOpen}>엑셀 업로드</button>\r\n        </div>\r\n        <div className=\"total-count\">\r\n          <span>[총 {count}개]</span>\r\n        </div>\r\n        <StudentTable>\r\n          {nothing && <NoListItem />}\r\n          <StudentList\r\n            listData={listData}\r\n            // handleAllCheck={handleAllCheck}\r\n            // handleCheckBox={handleCheckBox}\r\n            page={page}\r\n            // handleInfoClick={handleInfoClick}\r\n          />\r\n        </StudentTable>\r\n        <StudentPaging\r\n          page={page}\r\n          // setPage={setPage}\r\n          count={count}\r\n          pgge={page}\r\n        />\r\n      </StudentMgmtInner>\r\n      {/* api 에러 확인모달 */}\r\n      {apiErrorModalOpen && (\r\n        <ErrorModal\r\n          header={\"\"}\r\n          open={apiErrorModalOpen}\r\n          close={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorApiInfo}</span>\r\n        </ErrorModal>\r\n      )}\r\n    </StudentMgmtWrap>\r\n  );\r\n};\r\n\r\nexport default StudentMgmt;\r\n"],"names":["RecoilEnv","RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED","persistAtom","recoilPersist","StudentPageAtom","atom","key","default","page","count","search","category","effects_UNSTABLE","StudentMgmt","useNavigate","apiErrorModalOpen","setApiErrorModalOpen","useState","errorApiInfo","setErrorApiInfo","nothing","setNothing","listData","setListData","modalOpen","setModalOpen","deleteModalOpen","setDeleteModalOpen","excelModalOpen","setExcelModalOpen","excelOkModal","setExcelOkModal","acceptOkModal","setAcceptOkModal","uploadResult","setUpLoadResult","selectedFile","setSelectedFile","excelDownload","setExcelDownload","isLoading","setIsLoading","cateValue","setCateValue","searchValue","setSearchValue","pageState","setPageState","useRecoilState","render","fetchData","getStudentList","useEffect","_jsxs","StudentMgmtWrap","children","_jsx","className","StudentMgmtInner","StudentSearch","handleCategoryFiiter","e","prev","target","value","handleSearch","async","StudentModal","AcceptModal","StudentExcelUploadModal","handleExcelUpload","formData","FormData","append","result","postExcelSign","success","error","console","ExcelAcceptModal","onClick","getStudenListDownload","handleExcelModalOpen","StudentTable","NoListItem","StudentList","StudentPaging","pgge","ErrorModal","header","open","close","onConfirm"],"sourceRoot":""}