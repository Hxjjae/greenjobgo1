{"version":3,"file":"static/js/381.69f1b595.chunk.js","mappings":"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","sources":["api/client.js","components/OkModal.js","styles/ConnectCompanyStyle.js","styles/PagingStyle.js","components/student/CompanyListPaging.js","pages/studentPages/ConnectCompany.js","api/companyListAxios.js","styles/ListPagingStyle.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, removeCookie, setCookie } from \"./cookie\";\r\n\r\nconst client = axios.create({\r\n  baseURL: \"/api\",\r\n  withXSRFToken: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// const setAuthHeader = () => {\r\n//   const accessToken = getCookie(\"accessToken\");\r\n//   if (accessToken) {\r\n//     client.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//   } else {\r\n//     delete client.defaults.headers.common[\"Authorization\"];\r\n//   }\r\n// };\r\n\r\n// 요청 인터셉터 설정\r\nclient.interceptors.request.use(\r\n  async config => {\r\n    const accessToken = getCookie(\"accessToken\");\r\n    if (accessToken) {\r\n      config.headers.Authorization = `Bearer ${accessToken}`;\r\n      if (!config.headers) {\r\n        config.headers = {};\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// 응답 인터셉터 설정\r\nclient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  async error => {\r\n    const { config, response } = error;\r\n    const refreshToken = getCookie(\"refreshToken\");\r\n    if (response?.status === 401 && refreshToken) {\r\n      try {\r\n        const { data } = await client.post(`/sign/refresh-token`, {\r\n          refreshToken,\r\n        });\r\n        const accessToken = data;\r\n        setCookie(\"accessToken\", accessToken);\r\n        if (config?.headers && config.headers?.Authorization) {\r\n          config.headers.Authorization = `Bearer ${accessToken}`;\r\n          const retryResponse = await client(config);\r\n          return retryResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"토큰 갱신 실패:\", error);\r\n      }\r\n    }\r\n    console.error(\"요청 실패:\", error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n// client.interceptors.response.use(\r\n//   response => {\r\n//     return response;\r\n//   },\r\n//   async error => {\r\n//     const originalRequest = error.config;\r\n//     const refreshToken = getCookie(\"refreshToken\");\r\n//     if (error.response.status === 401 && refreshToken) {\r\n//       try {\r\n//         const response = await client.post(`/sign/refresh-token`, {\r\n//           refreshToken,\r\n//         });\r\n//         const accessToken = response.data;\r\n//         setCookie(\"accessToken\", accessToken);\r\n//         setAuthHeader();\r\n//         return client(originalRequest);\r\n//       } catch (error) {\r\n//         console.error(\"토큰 갱신 실패:\", error);\r\n//         removeAuth();\r\n//         return Promise.reject(error);\r\n//       }\r\n//     }\r\n//     console.error(\"요청 실패:\", error);\r\n//     return Promise.reject(error);\r\n//   },\r\n// );\r\n\r\n// 로그인 함수\r\nexport const fetchLogin = async (userId, password, setErrorCancelInfo) => {\r\n  try {\r\n    const res = await client.post(`/sign/sign-in`, {\r\n      email: userId,\r\n      pw: password,\r\n    });\r\n    const { role, refreshToken, accessToken, vo, accessTokenTime } =\r\n      await res.data;\r\n    if (role && refreshToken && accessToken) {\r\n      setCookie(\"refreshToken\", refreshToken);\r\n      setCookie(\"accessToken\", accessToken);\r\n      setErrorCancelInfo(\"\");\r\n      return { role, accessToken, refreshToken, vo, accessTokenTime };\r\n    } else {\r\n      throw new Error(\"잘못된 응답 형식\");\r\n    }\r\n  } catch (error) {\r\n    handleLoginError(error, setErrorCancelInfo);\r\n  }\r\n};\r\n\r\n// 토큰삭제 함수\r\nconst removeAuth = () => {\r\n  removeCookie(\"accessToken\");\r\n  removeCookie(\"refreshToken\");\r\n  delete client.defaults.headers.common[\"Authorization\"];\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const postLogout = async () => {\r\n  try {\r\n    await client.post(\"/sign/logout\");\r\n    removeAuth();\r\n  } catch (error) {\r\n    console.error(\"로그아웃 실패:\", error);\r\n  }\r\n};\r\n\r\n// 예외처리 함수\r\nconst handleLoginError = (error, setErrorCancelInfo) => {\r\n  if (error.response.status === 432) {\r\n    setErrorCancelInfo(\"아이디를 확인 해 주세요\");\r\n  } else if (error.response.status === 434) {\r\n    setErrorCancelInfo(\"비밀번호를 확인 해 주세요\");\r\n  } else if (error.response.status === 435) {\r\n    setErrorCancelInfo(\"권한이 없습니다. 담당자에게 문의 바랍니다.\");\r\n  } else if (error.response.status === 500) {\r\n    setErrorCancelInfo(\"서버 오류 입니다.\");\r\n  }\r\n  throw new Error(\"로그인에 실패했습니다.\");\r\n};\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { ConfirmModalWarp, ModalOkBtn } from \"../styles/GlobalStyle\";\r\n\r\nconst OkModal = ({ header, open, close, onConfirm, children }) => {\r\n  console.log(\"오케이 모달 작동됩니다\");\r\n  const stopPropagation = e => {\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <ConfirmModalWarp onClick={close}>\r\n      <div className={open ? \"openConfirmModal Confimmodal\" : \"Confirmmodal\"}>\r\n        {open ? (\r\n          <div\r\n            className=\"modalConfirm-wrapper\"\r\n            onClick={e => stopPropagation(e)}\r\n          >\r\n            {/* 헤더내용 */}\r\n            <div className=\"modal-header\">\r\n              {header}\r\n              <p className=\"close\" onClick={close}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/btn_menu_close.png`}\r\n                  alt=\"X\"\r\n                />\r\n              </p>\r\n            </div>\r\n            {/* 모달내용(컴포넌트 읽어오는부분) */}\r\n            <div className=\"modalConfirm-content\">\r\n              {children}\r\n              <div>\r\n                <ModalOkBtn onClick={onConfirm}>확인</ModalOkBtn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ConfirmModalWarp>\r\n  );\r\n};\r\n\r\nexport default OkModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ConnectCompanyWrap = styled.div`\r\n  width: 1400px;\r\n  padding-top: 30px;\r\n  h2 {\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    margin-bottom: 40px;\r\n  }\r\n  .connect-company-inner {\r\n    ul {\r\n      display: flex;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      gap: 40px;\r\n      li {\r\n        width: 320px;\r\n        height: 170px;\r\n        padding: 20px;\r\n        border: 1px solid #d9d9d9;\r\n        border-radius: 12px;\r\n        h3 {\r\n          font-size: 18px;\r\n          margin-bottom: 20px;\r\n        }\r\n        .company-info {\r\n          font-size: 15px;\r\n          div {\r\n            letter-spacing: 1;\r\n            :first-of-type {\r\n              display: flex;\r\n              gap: 40px;\r\n              span {\r\n                :first-of-type {\r\n                  font-weight: 500;\r\n                }\r\n              }\r\n              margin-bottom: 10px;\r\n            }\r\n            :last-of-type {\r\n              display: flex;\r\n              gap: 10px;\r\n              span {\r\n                line-height: 18px;\r\n                :first-of-type {\r\n                  display: flex;\r\n                  gap: 10px;\r\n                  font-weight: 500;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PagiWrap = styled.div`\r\n  position: fixed;\r\n  left: 40.5%;\r\n  bottom: 30px;\r\n  ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 25px;\r\n    li {\r\n      display: inline-block;\r\n      width: 25px;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      a {\r\n        text-decoration: none;\r\n        color: #000;\r\n        font-size: 15px;\r\n        line-height: 15px;\r\n      }\r\n    }\r\n    .active a {\r\n      color: #fff;\r\n    }\r\n    .active {\r\n      background-color: #228fcf;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { PagiWrap } from \"../../styles/PagingStyle\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { ListPagingSty } from \"../../styles/ListPagingStyle\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CompanyListPaging = ({ page, setPage, count }) => {\r\n  return (\r\n    //  <PagiWrap>\r\n    //   <Pagination\r\n    //     activePage={page}\r\n    //     itemsCountPerPage={12}\r\n    //     totalItemsCount={count}\r\n    //     pageRangeDisplayed={10}\r\n    //     marginPagesDisplayed={0}\r\n    //     prevPageText={\"‹\"}\r\n    //     nextPageText={\"›\"}\r\n    //     onChange={setPage}\r\n    //   /> \r\n    //    </PagiWrap>\r\n    <ListPagingSty>\r\n      <Pagination\r\n        activePage={page}\r\n        itemsCountPerPage={12}\r\n        totalItemsCount={count}\r\n        pageRangeDisplayed={10}\r\n        marginPagesDisplayed={0}\r\n        prevPageText={<FontAwesomeIcon icon={faChevronLeft} />}\r\n        nextPageText={<FontAwesomeIcon icon={faChevronRight} />}\r\n        firstPageText={\"\"}\r\n        lastPageText={\"\"}\r\n        onChange={setPage}\r\n      />\r\n    </ListPagingSty>\r\n  );\r\n};\r\n\r\nexport default CompanyListPaging;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ConnectCompanyWrap } from \"../../styles/ConnectCompanyStyle\";\r\nimport CompanyListPaging from \"../../components/student/CompanyListPaging\";\r\nimport { getCompanyList } from \"../../api/companyListAxios\";\r\nimport OkModal from \"../../components/OkModal\";\r\n\r\nconst ConnectCompany = () => {\r\n  // api 오류 메세지 받아오는 state.\r\n  const [apiErrorModalOpen, setApiErrorModalOpen] = useState(false);\r\n  const [errorApiInfo, setErrorApiInfo] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [listData, setListData] = useState([]);\r\n  useEffect(() => {\r\n    getCompanyList(setListData, setCount, page, setErrorApiInfo);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (errorApiInfo) {\r\n      setApiErrorModalOpen(true);\r\n    } else {\r\n      setApiErrorModalOpen(false);\r\n    }\r\n  }, [errorApiInfo]);\r\n  return (\r\n    <ConnectCompanyWrap>\r\n      <h2>협약 기업 목록</h2>\r\n      <div className=\"connect-company-inner\">\r\n        <ul>\r\n          {listData &&\r\n            listData.map((item, index) => (\r\n              <li key={item.companyCode}>\r\n                <h3>{item.companyName}</h3>\r\n                <div className=\"company-info\">\r\n                  <div>\r\n                    <span>지역</span>\r\n                    <span>{item.area}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span>홈페이지</span>\r\n                    <span>{item.homepage}</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <CompanyListPaging page={page} setPage={setPage} count={count} />\r\n\r\n      {/* api 에러 확인모달 */}\r\n      {apiErrorModalOpen && (\r\n        <OkModal\r\n          header={\"\"}\r\n          open={apiErrorModalOpen}\r\n          close={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n          onConfirm={() => {\r\n            setApiErrorModalOpen(false);\r\n            setErrorApiInfo(\"\");\r\n          }}\r\n        >\r\n          <span>{errorApiInfo}</span>\r\n        </OkModal>\r\n      )}\r\n    </ConnectCompanyWrap>\r\n  );\r\n};\r\n\r\nexport default ConnectCompany;\r\n","import client from \"../api/client\";\r\n\r\nexport const getCompanyList = async (\r\n  setListData,\r\n  setCount,\r\n  page,\r\n  setErrorApiInfo,\r\n) => {\r\n  try {\r\n    const res = await client.get(`/student/company?page=${page}&size=12`);\r\n    setListData(res.data.list);\r\n    setCount(res.data.page.idx);\r\n  } catch (error) {\r\n    setErrorApiInfo(`Company List : ${error.message}`);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Maincolor } from \"./GlobalStyle\";\r\n\r\nexport const ListPagingSty = styled.div`\r\n  ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 !important;\r\n    margin-top: 25px;\r\n    li {\r\n      display: inline-block;\r\n      width: 25px;\r\n      height: 25px;\r\n      line-height: 25px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n\r\n      a {\r\n        color: #bababa;\r\n        text-decoration: none;\r\n        font-size: 12px;\r\n        line-height: 14px;\r\n        text-align: center;\r\n        font-weight: 400;\r\n        letter-spacing: -0.56px;\r\n        font-style: normal;\r\n      }\r\n    }\r\n    .active a {\r\n      color: ${Maincolor.black};\r\n      font-style: italic;\r\n      font-size: 14px;\r\n    }\r\n    .active {\r\n      /* background-color: ${Maincolor.admintxt}; */\r\n    }\r\n  }\r\n  @media all and (max-width: 767px) {\r\n    ul {\r\n      margin-top: 0;\r\n      padding-bottom: 20px !important;\r\n    }\r\n  }\r\n`;\r\n"],"names":["client","axios","create","baseURL","withXSRFToken","headers","interceptors","request","use","async","accessToken","getCookie","config","Authorization","concat","error","Promise","reject","response","refreshToken","status","_config$headers","data","post","setCookie","console","log","fetchLogin","userId","password","setErrorCancelInfo","res","email","pw","role","vo","accessTokenTime","Error","handleLoginError","postLogout","removeCookie","defaults","common","_ref","header","open","close","onConfirm","children","_jsx","ConfirmModalWarp","onClick","className","_jsxs","e","stopPropagation","src","process","alt","ModalOkBtn","ConnectCompanyWrap","styled","div","_templateObject","_taggedTemplateLiteral","page","setPage","count","ListPagingSty","Pagination","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","marginPagesDisplayed","prevPageText","FontAwesomeIcon","icon","faChevronLeft","nextPageText","faChevronRight","firstPageText","lastPageText","onChange","ConnectCompany","apiErrorModalOpen","setApiErrorModalOpen","useState","errorApiInfo","setErrorApiInfo","setCount","listData","setListData","useEffect","get","list","idx","message","getCompanyList","map","item","index","companyName","area","homepage","companyCode","CompanyListPaging","OkModal","Maincolor","black","admintxt"],"sourceRoot":""}